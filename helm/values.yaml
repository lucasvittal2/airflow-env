deployParams:
  AKS_AIRFLOW_NAMESPACE: airflow
  AZ_TENANT_ID: "7baa26da-48a3-448d-baf2-1ec8a164b2e6"
  SERVICE_ACCOUNT_NAME: "airflow"
  AZ_IDENTITY_NAME_CLIENT_ID: "6a971a48-80a3-442d-b179-19bfcf5ceb22"
  KEYVAULT_URL: "https://airflow-vault-dev-kv.vault.azure.net/"
  AKS_AIRFLOW_LOGS_STORAGE_SECRET_NAME: "storage-account-credentials"
  WEB_SERVER_SECRET_KEY: "0e81a3aaa6b7b2fc8045674f4570ac78"
  GIT_SYNC_USERNAME: "bHVjYXN2aXR0YWwy"
  GIT_SYNC_PASSWORD: "Z2hwX0NOaHluZDZuMWdxUU0wcVdBRVRuRmI1N1BuMWsxVzNSN2kyRA=="
  GITSYNC_USERNAME: "bHVjYXN2aXR0YWwy"
  GITSYNC_PASSWORD: "Z2hwX0NOaHluZDZuMWdxUU0wcVdBRVRuRmI1N1BuMWsxVzNSN2kyRA=="
  GIT_SSH_KEY: "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFB\nQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUFNd0FBQUF0emMyZ3RaVwpReU5UVXhP\nUUFBQUNBYVFjR1ZCTHJlbS9JcUNxZ29VbjV0L2FVVjJrenZrY0UxOUFtRjhLazRaZ0FBQUpqaUlu\nbGI0aUo1Cld3QUFBQXR6YzJndFpXUXlOVFV4T1FBQUFDQWFRY0dWQkxyZW0vSXFDcWdvVW41dC9h\nVVYya3p2a2NFMTlBbUY4S2s0WmcKQUFBRUNFS1NldFk3NjZjRWF3RHJDT3Rlcy9PMUFOc0loVm5k\nM1QxWmJJSm5iWURScEJ3WlVFdXQ2Yjhpb0txQ2hTZm0zOQpwUlhhVE8rUndUWDBDWVh3cVRobUFB\nQUFGV3gxWTJGemRtbDBkR0ZzUUdkdFlXbHNMbU52YlE9PQotLS0tLUVORCBPUEVOU1NIIFBSSVZB\nVEUgS0VZLS0tLS0K"
  AIRFLOW_WEB_SERVER_KEY: "0e81a3aaa6b7b2fc8045674f4570ac78"
  AIRFLOW_REDIS_PASSWORD: "TenSLineArYmErCHarKLERNoiDgere"
  FERNET_KEY: "o-O6e1855-1BMUExNeD7K9ZtOyDGd6akvYtQiaHmyeg="
  AKS_AIRFLOW_LOGS_STORAGE_CONTAINER_NAME: "airflow-container-logs"
  AKS_AIRFLOW_LOGS_STORAGE_ACCOUNT_NAME : "airflowlogsdevsa"
namespace:
  create: true
  name: "airflow"

images:
  airflow:
    repository: airflowregistrydev.azurecr.io/airflow
    tag: 2.9.3
    # Specifying digest takes precedence over tag.
    digest: ~
    pullPolicy: IfNotPresent
  # To avoid images with user code, you can turn this to 'true' and
  # all the 'run-airflow-migrations' and 'wait-for-airflow-migrations' containers/jobs
  # will use the images from 'defaultAirflowRepository:defaultAirflowTag' values
  # to run and wait for DB migrations .
  useDefaultImageForMigration: false
  # timeout (in seconds) for airflow-migrations to complete
  migrationsWaitTimeout: 60
  pod_template:
    # Note that `images.pod_template.repository` and `images.pod_template.tag` parameters
    # can be overridden in `config.kubernetes` section. So for these parameters to have effect
    # `config.kubernetes.worker_container_repository` and `config.kubernetes.worker_container_tag`
    # must be not set .
    repository: airflowregistrydev.azurecr.io/airflow
    tag: 2.9.3
    pullPolicy: IfNotPresent
  flower:
    repository: airflowregistrydev.azurecr.io/airflow
    tag: 2.9.3
    pullPolicy: IfNotPresent
  statsd:
    repository: airflowregistrydev.azurecr.io/statsd-exporter
    tag: v0.26.1
    pullPolicy: IfNotPresent
  pgbouncer:
    repository: airflowregistrydev.azurecr.io/airflow
    tag: airflow-pgbouncer-2024.01.19-1.21.0
    pullPolicy: IfNotPresent
  pgbouncerExporter:
    repository: airflowregistrydev.azurecr.io/airflow
    tag: airflow-pgbouncer-exporter-2024.06.18-0.17.0
    pullPolicy: IfNotPresent
  gitSync:
    repository: airflowregistrydev.azurecr.io/git-sync
    tag: v4.1.0
    pullPolicy: IfNotPresent



# Airflow executor
executor: "KubernetesExecutor"

# Service Account with Workload Identity
serviceAccount:
  create: true
  name: "airflow"
  annotations:
    azure.workload.identity/client-id: "6a971a48-80a3-442d-b179-19bfcf5ceb22"
    azure.workload.identity/tenant-id: "7baa26da-48a3-448d-baf2-1ec8a164b2e6"

# Pod Identity Label
podLabels:
  azure.workload.identity/use: "true"

# Environment variables for all airflow containers
env:
  - name: ENVIRONMENT
    value: dev
  - name: AZURE_CLIENT_ID
    value: "6a971a48-80a3-442d-b179-19bfcf5ceb22"
  - name: AZURE_TENANT_ID
    value: "6a971a48-80a3-442d-b179-19bfcf5ceb22"

extraEnv: |
  - name: AIRFLOW__CORE__DEFAULT_TIMEZONE
    value: 'America/New_York'

# Configuration for postgresql subchart
postgresql:
  enabled: true

# Disable pgbouncer for initial deployment
pgbouncer:
  enabled: false

# DAGs configuration
dags:
  gitSync:
    enabled: true
    repo: https://github.com/lucasvittal2/airflow-env.git
    branch: dev
    rev: HEAD
    depth: 1
    maxFailures: 0
    subPath: "src/python/dags"
    wait: 60

# Logs configuration - simplified for initial deployment
logs:
  persistence:
    enabled: true
    existingClaim: pvc-airflow-logs
    storageClassName: azureblob-fuse-premium

# We disable the log groomer sidecar because we use Azure Blob Storage for logs, with lifecyle policy set.
triggerer:
  logGroomerSidecar:
    enabled: false

scheduler:
  logGroomerSidecar:
    enabled: false

workers:
  logGroomerSidecar:
    enabled: false